<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="10" />
    <option name="newTranslationDialogWidth" value="580" />
    <option name="newTranslationDialogX" value="586" />
    <option name="newTranslationDialogY" value="354" />
    <histories>
      <item value="introspected" />
      <item value="introspe" />
      <item value="int" />
      <item value="ㄍㄣ" />
      <item value="特權" />
      <item value="achieve condition" />
      <item value="achievement condition" />
      <item value="achievement" />
      <item value="ㄇ" />
      <item value="已達成條件" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="11" />
        <entry key="CHINESE_TRADITIONAL" value="15" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669595670508" />
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="phoneticFontFamily" value="Fira Code" />
    <option name="primaryFontFamily" value="Fira Code" />
    <option name="showReplacementActionInContextMenu" value="true" />
    <option name="translateDocumentation" value="true" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1686531080072" />
  </component>
  <component name="Translation.Settings">
    <option name="phoneticFontFamily" value="DialogInput" />
    <option name="primaryFontFamily" value="DialogInput" />
    <option name="primaryLanguage" value="CHINESE_TRADITIONAL" />
    <option name="translateDocumentation" value="true" />
    <option name="ttsSource" value="TRANSLATION" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="410" />
    <option name="newTranslationDialogWidth" value="795" />
    <option name="newTranslationDialogX" value="564" />
    <option name="newTranslationDialogY" value="142" />
    <histories>
      <item value="將 value 加進 set" />
      <item value="將 value 佳進 set" />
      <item value="implicit" />
      <item value="Fields in a Serializable class must themselves be either Serializable or transient even if the class is never explicitly serialized or deserialized. For instance, under load, most J2EE application frameworks flush objects to disk, and an allegedly Serializable object with non-transient, non-serializable data members could cause program crashes, and open the door to attackers. In general a Serializable class is expected to fulfil its contract and not have an unexpected behaviour when an instance is serialized.&#10;This rule raises an issue on non-Serializable fields, and on collection fields when they are not private (because they could be assigned non-Serializable values externally), and when they are assigned non-Serializable types within the class." />
      <item value="引擎" />
      <item value="enigin" />
      <item value="engin" />
      <item value="enogin" />
      <item value="failed" />
      <item value="failure" />
      <item value="經過濾後" />
      <item value="沒有需要重送的資料" />
      <item value="推播通知" />
      <item value="推播訊息" />
      <item value="推播[ㄩ" />
      <item value="推播" />
      <item value="Schedule" />
      <item value="Scheduled" />
      <item value="i don't know what are you talk about, please ask other people" />
      <item value="legacy " />
      <item value="結束" />
      <item value="According to its JavaDocs, the intermediate Stream operation java.util.Stream.peek() “exists mainly to support debugging” purposes.&#10;A key difference with other intermediate Stream operations is that the Stream implementation is free to skip calls to peek() for optimization purpose. This can lead to peek() being unexpectedly called only for some or none of the elements in the Stream.&#10;As a consequence, relying on peek() without careful consideration can lead to error-prone code.&#10;This rule raises an issue for each use of peek() to be sure that it is challenged and validated by the team to be meant for production debugging/logging purposes." />
      <item value="立即" />
      <item value="immidate" />
      <item value="過期" />
      <item value="搭乘" />
      <item value="乘車" />
      <item value="T/6" />
      <item value="繳費" />
      <item value="RUL3" />
      <item value="retried" />
      <item value="ret" />
      <item value="transmission.latency" />
      <item value="Deploied" />
      <item value="Deploy" />
      <item value="Deployed" />
      <item value="Generate test case boilerplate instantly as you navigate to a method&#10;Mock method calls in test cases&#10;when(some.Method()).then(answer))&#10;Support @Mock/@MockExtension for Mockito&#10;JUnit4 and JUnit 5 flavours" />
      <item value="捐款" />
      <item value="rm0 " />
      <item value="plat" />
      <item value="column" />
      <item value="交易紀錄" />
      <item value="Deploying" />
      <item value="驗簽" />
      <item value="驗" />
      <item value="lettuce" />
      <item value="lettecue" />
      <item value="don't be afraid" />
      <item value="pushNotification" />
      <item value="push notification" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="3" />
        <entry key="CHINESE_TRADITIONAL" value="169" />
        <entry key="ENGLISH" value="59" />
      </map>
    </option>
  </component>
</application>